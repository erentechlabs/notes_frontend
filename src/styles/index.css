@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --border: 214.3 31.8% 91.4%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --border: 217.2 32.6% 17.5%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

/* TipTap Editor Styles */
.ProseMirror {
  outline: none;
  min-height: 100%;
  padding: 2rem;
}

.ProseMirror p.is-editor-empty:first-child::before {
  color: hsl(var(--muted-foreground));
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror h1 {
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1.2;
  margin-top: 1.5rem;
  margin-bottom: 1rem;
}

.ProseMirror h2 {
  font-size: 2rem;
  font-weight: 600;
  line-height: 1.3;
  margin-top: 1.25rem;
  margin-bottom: 0.75rem;
}

.ProseMirror h3 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.4;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.ProseMirror ul,
.ProseMirror ol {
  padding-left: 2rem;
  margin: 1rem 0;
  list-style-position: outside;
}

.ProseMirror ul {
  list-style-type: disc !important;
}

.ProseMirror ol {
  list-style-type: decimal !important;
}

.ProseMirror ul ul {
  list-style-type: circle !important;
}

.ProseMirror ul ul ul {
  list-style-type: square !important;
}

/* Centered lists - handle both parent and direct styling */
.ProseMirror [style*="text-align: center"] ul,
.ProseMirror [style*="text-align: center"] ol,
.ProseMirror ul[style*="text-align: center"],
.ProseMirror ol[style*="text-align: center"] {
  list-style-position: inside;
  padding-left: 0;
  display: table;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

/* Right-aligned lists - handle both parent and direct styling */
.ProseMirror [style*="text-align: right"] ul,
.ProseMirror [style*="text-align: right"] ol,
.ProseMirror ul[style*="text-align: right"],
.ProseMirror ol[style*="text-align: right"] {
  list-style-position: inside;
  padding-left: 0;
  display: table;
  margin-left: auto;
  margin-right: 0;
  text-align: right;
}

/* Left-aligned lists explicitly */
.ProseMirror [style*="text-align: left"] ul,
.ProseMirror [style*="text-align: left"] ol,
.ProseMirror ul[style*="text-align: left"],
.ProseMirror ol[style*="text-align: left"] {
  list-style-position: outside;
  padding-left: 2rem;
  text-align: left;
}

.ProseMirror li {
  margin: 0.25rem 0;
  display: list-item;
}

.ProseMirror li p {
  margin: 0;
}

.ProseMirror code {
  background-color: hsl(var(--muted));
  padding: 0.2rem 0.4rem;
  border-radius: 0.25rem;
  font-size: 0.875em;
}

.ProseMirror pre {
  background-color: hsl(var(--muted));
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1rem 0;
}

.ProseMirror blockquote {
  border-left: 3px solid hsl(var(--primary));
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
}

.ProseMirror strong {
  font-weight: 700;
}

.ProseMirror em {
  font-style: italic;
}

.ProseMirror u {
  text-decoration: underline;
}

/* Task List Styles */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding-left: 0;
  margin: 1rem 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  margin: 0.5rem 0;
}

.ProseMirror ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-top: 0.2rem;
  user-select: none;
}

.ProseMirror ul[data-type="taskList"] li > div {
  flex: 1;
}

.ProseMirror ul[data-type="taskList"] li input[type="checkbox"] {
  width: 1.125rem;
  height: 1.125rem;
  cursor: pointer;
  border: 2px solid hsl(var(--border));
  border-radius: 0.25rem;
  background-color: hsl(var(--background));
  transition: all 0.2s ease;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  position: relative;
}

.ProseMirror ul[data-type="taskList"] li input[type="checkbox"]:hover {
  border-color: hsl(var(--primary));
  background-color: hsl(var(--accent));
}

.ProseMirror ul[data-type="taskList"] li input[type="checkbox"]:checked {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}

.ProseMirror ul[data-type="taskList"] li input[type="checkbox"]:checked::before {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: hsl(var(--primary-foreground));
  font-size: 0.875rem;
  font-weight: 700;
}

.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div {
  text-decoration: line-through;
  opacity: 0.6;
}

/* Nested task lists */
.ProseMirror ul[data-type="taskList"] ul[data-type="taskList"] {
  margin: 0.5rem 0 0.5rem 1.5rem;
}
